{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guard_",
          "type": "address"
        }
      ],
      "name": "NotIERC165Compliant",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlySafe",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousAvatar",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAvatar",
          "type": "address"
        }
      ],
      "name": "AvatarSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "guard",
          "type": "address"
        }
      ],
      "name": "ChangedGuard",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousTarget",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newTarget",
          "type": "address"
        }
      ],
      "name": "TargetSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "avatar",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "claimSafe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expiration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "by",
          "type": "uint256"
        }
      ],
      "name": "extendValidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGuard",
      "outputs": [
        {
          "internalType": "address",
          "name": "_guard",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "guard",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "safe",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_benefiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expiration",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_avatar",
          "type": "address"
        }
      ],
      "name": "setAvatar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "setBeneficiary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_guard",
          "type": "address"
        }
      ],
      "name": "setGuard",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "setTarget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "initializeParams",
          "type": "bytes"
        }
      ],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b610071565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610b89806100806000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063776d1a01116100a2578063a4f9edbf11610071578063a4f9edbf1461020a578063c91063891461021b578063d4b839921461022c578063e19a9dd91461023f578063f2fde38b1461025257600080fd5b8063776d1a01146101c05780637ceab3b1146101d357806386863ec6146101e65780638da5cb5b146101f957600080fd5b80634665096d116100de5780634665096d1461017b578063525a142f146101925780635aef7de6146101a5578063715018a6146101b857600080fd5b8063086cfca8146101105780631a891577146101255780631c31f7101461013857806338af3eed1461014b575b600080fd5b61012361011e366004610896565b610265565b005b6101236101333660046108ce565b6102bf565b610123610146366004610896565b610315565b60695461015e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61018460685481565b604051908152602001610172565b6101236101a036600461097f565b610362565b60665461015e906001600160a01b031681565b6101236103a1565b6101236101ce366004610896565b6103b5565b60655461015e906001600160a01b031681565b6101236101f4366004610998565b61040f565b6033546001600160a01b031661015e565b6101236102183660046108ce565b50565b6065546001600160a01b031661015e565b60675461015e906001600160a01b031681565b61012361024d366004610896565b610448565b610123610260366004610896565b61054f565b61026d6105c5565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f52ae88b092de36f87fb43fe794eb1381023b9c1bce563a871154022c63dce34290600090a35050565b426068541080156102da57506069546001600160a01b031633145b156102fc576066546102f8906001600160a01b03166000838161061f565b5050565b60405163ea8e4eb560e01b815260040160405180910390fd5b6067546001600160a01b031633146103405760405163d7fed6bd60e01b815260040160405180910390fd5b606980546001600160a01b0319166001600160a01b0392909216919091179055565b6067546001600160a01b0316331461038d5760405163d7fed6bd60e01b815260040160405180910390fd5b8060685461039b91906109d4565b60685550565b6103a96105c5565b6103b36000610828565b565b6103bd6105c5565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f90cc2f570a6eb594b1580ea3e41247d2d73a55281889e86bd4ec2fc29c7e62d690600090a35050565b61041883610265565b610421836103b5565b606980546001600160a01b0319166001600160a01b03939093169290921790915560685550565b6104506105c5565b6001600160a01b038116156104fb576040516301ffc9a760e01b815263736bd41d60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156104aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ce91906109fb565b6104fb576040516358b7533f60e11b81526001600160a01b03821660048201526024015b60405180910390fd5b606580546001600160a01b0319166001600160a01b0383169081179091556040519081527f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa29060200160405180910390a150565b6105576105c5565b6001600160a01b0381166105bc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104f2565b61021881610828565b6033546001600160a01b031633146103b35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f2565b6065546000906001600160a01b031680156107a3576040805180820182526002815261060f60f31b60208201529051633af85da960e11b81526001600160a01b038316916375f0bb529161068a918a918a918a918a9160009182918291829182913390600401610a85565b600060405180830381600087803b1580156106a457600080fd5b505af11580156106b8573d6000803e3d6000fd5b505060675460405163468721a760e01b81526001600160a01b03909116925063468721a791506106f2908990899089908990600401610b14565b6020604051808303816000875af1158015610711573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073591906109fb565b604051631264e26d60e31b815261060f60f31b600482015281151560248201529092506001600160a01b03821690639327136890604401600060405180830381600087803b15801561078657600080fd5b505af115801561079a573d6000803e3d6000fd5b5050505061081f565b60675460405163468721a760e01b81526001600160a01b039091169063468721a7906107d9908990899089908990600401610b14565b6020604051808303816000875af11580156107f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081c91906109fb565b91505b50949350505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b038116811461089157600080fd5b919050565b6000602082840312156108a857600080fd5b6108b18261087a565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156108e057600080fd5b813567ffffffffffffffff808211156108f857600080fd5b818401915084601f83011261090c57600080fd5b81358181111561091e5761091e6108b8565b604051601f8201601f19908116603f01168101908382118183101715610946576109466108b8565b8160405282815287602084870101111561095f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561099157600080fd5b5035919050565b6000806000606084860312156109ad57600080fd5b6109b68461087a565b92506109c46020850161087a565b9150604084013590509250925092565b808201808211156109f557634e487b7160e01b600052601160045260246000fd5b92915050565b600060208284031215610a0d57600080fd5b815180151581146108b157600080fd5b6000815180845260005b81811015610a4357602081850181015186830182015201610a27565b506000602082860101526020601f19601f83011685010191505092915050565b60028110610a8157634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038c81168252602082018c905261016060408301819052600091610ab28483018e610a1d565b9150610ac1606085018d610a63565b8a60808501528960a08501528860c085015280881660e0850152808716610100850152838203610120850152610af78287610a1d565b925080851661014085015250509c9b505050505050505050505050565b60018060a01b0385168152836020820152608060408201526000610b3b6080830185610a1d565b9050610b4a6060830184610a63565b9594505050505056fea2646970667358221220a590ac99c2afed252f5dcd86d540c5ca9f1e5b4762722865bd123343554dfde064736f6c63430008110033",
    "sourceMap": "99:1124:12:-:0;;;251:61;;;;;;;;;-1:-1:-1;275:30:12;294:10;275:18;:30::i;:::-;99:1124;;2673:187:7;2765:6;;;-1:-1:-1;;;;;2781:17:7;;;-1:-1:-1;;;;;;2781:17:7;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;99:1124:12:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c8063776d1a01116100a2578063a4f9edbf11610071578063a4f9edbf1461020a578063c91063891461021b578063d4b839921461022c578063e19a9dd91461023f578063f2fde38b1461025257600080fd5b8063776d1a01146101c05780637ceab3b1146101d357806386863ec6146101e65780638da5cb5b146101f957600080fd5b80634665096d116100de5780634665096d1461017b578063525a142f146101925780635aef7de6146101a5578063715018a6146101b857600080fd5b8063086cfca8146101105780631a891577146101255780631c31f7101461013857806338af3eed1461014b575b600080fd5b61012361011e366004610896565b610265565b005b6101236101333660046108ce565b6102bf565b610123610146366004610896565b610315565b60695461015e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61018460685481565b604051908152602001610172565b6101236101a036600461097f565b610362565b60665461015e906001600160a01b031681565b6101236103a1565b6101236101ce366004610896565b6103b5565b60655461015e906001600160a01b031681565b6101236101f4366004610998565b61040f565b6033546001600160a01b031661015e565b6101236102183660046108ce565b50565b6065546001600160a01b031661015e565b60675461015e906001600160a01b031681565b61012361024d366004610896565b610448565b610123610260366004610896565b61054f565b61026d6105c5565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f52ae88b092de36f87fb43fe794eb1381023b9c1bce563a871154022c63dce34290600090a35050565b426068541080156102da57506069546001600160a01b031633145b156102fc576066546102f8906001600160a01b03166000838161061f565b5050565b60405163ea8e4eb560e01b815260040160405180910390fd5b6067546001600160a01b031633146103405760405163d7fed6bd60e01b815260040160405180910390fd5b606980546001600160a01b0319166001600160a01b0392909216919091179055565b6067546001600160a01b0316331461038d5760405163d7fed6bd60e01b815260040160405180910390fd5b8060685461039b91906109d4565b60685550565b6103a96105c5565b6103b36000610828565b565b6103bd6105c5565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f90cc2f570a6eb594b1580ea3e41247d2d73a55281889e86bd4ec2fc29c7e62d690600090a35050565b61041883610265565b610421836103b5565b606980546001600160a01b0319166001600160a01b03939093169290921790915560685550565b6104506105c5565b6001600160a01b038116156104fb576040516301ffc9a760e01b815263736bd41d60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156104aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ce91906109fb565b6104fb576040516358b7533f60e11b81526001600160a01b03821660048201526024015b60405180910390fd5b606580546001600160a01b0319166001600160a01b0383169081179091556040519081527f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa29060200160405180910390a150565b6105576105c5565b6001600160a01b0381166105bc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104f2565b61021881610828565b6033546001600160a01b031633146103b35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f2565b6065546000906001600160a01b031680156107a3576040805180820182526002815261060f60f31b60208201529051633af85da960e11b81526001600160a01b038316916375f0bb529161068a918a918a918a918a9160009182918291829182913390600401610a85565b600060405180830381600087803b1580156106a457600080fd5b505af11580156106b8573d6000803e3d6000fd5b505060675460405163468721a760e01b81526001600160a01b03909116925063468721a791506106f2908990899089908990600401610b14565b6020604051808303816000875af1158015610711573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073591906109fb565b604051631264e26d60e31b815261060f60f31b600482015281151560248201529092506001600160a01b03821690639327136890604401600060405180830381600087803b15801561078657600080fd5b505af115801561079a573d6000803e3d6000fd5b5050505061081f565b60675460405163468721a760e01b81526001600160a01b039091169063468721a7906107d9908990899089908990600401610b14565b6020604051808303816000875af11580156107f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081c91906109fb565b91505b50949350505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b038116811461089157600080fd5b919050565b6000602082840312156108a857600080fd5b6108b18261087a565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156108e057600080fd5b813567ffffffffffffffff808211156108f857600080fd5b818401915084601f83011261090c57600080fd5b81358181111561091e5761091e6108b8565b604051601f8201601f19908116603f01168101908382118183101715610946576109466108b8565b8160405282815287602084870101111561095f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561099157600080fd5b5035919050565b6000806000606084860312156109ad57600080fd5b6109b68461087a565b92506109c46020850161087a565b9150604084013590509250925092565b808201808211156109f557634e487b7160e01b600052601160045260246000fd5b92915050565b600060208284031215610a0d57600080fd5b815180151581146108b157600080fd5b6000815180845260005b81811015610a4357602081850181015186830182015201610a27565b506000602082860101526020601f19601f83011685010191505092915050565b60028110610a8157634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038c81168252602082018c905261016060408301819052600091610ab28483018e610a1d565b9150610ac1606085018d610a63565b8a60808501528960a08501528860c085015280881660e0850152808716610100850152838203610120850152610af78287610a1d565b925080851661014085015250509c9b505050505050505050505050565b60018060a01b0385168152836020820152608060408201526000610b3b6080830185610a1d565b9050610b4a6060830184610a63565b9594505050505056fea2646970667358221220a590ac99c2afed252f5dcd86d540c5ca9f1e5b4762722865bd123343554dfde064736f6c63430008110033",
    "sourceMap": "99:1124:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;934:176:0;;;;;;:::i;:::-;;:::i;:::-;;977:244:12;;;;;;:::i;:::-;;:::i;625:174::-;;;;;;:::i;:::-;;:::i;168:26::-;;;;;-1:-1:-1;;;;;168:26:12;;;;;;-1:-1:-1;;;;;1605:32:13;;;1587:51;;1575:2;1560:18;168:26:12;;;;;;;;137:25;;;;;;;;;1795::13;;;1783:2;1768:18;137:25:12;1649:177:13;805:166:12;;;;;;:::i;:::-;;:::i;436:21:0:-;;;;;-1:-1:-1;;;;;436:21:0;;;2071:101:7;;;:::i;1233:176:0:-;;;;;;:::i;:::-;;:::i;371:20:3:-;;;;;-1:-1:-1;;;;;371:20:3;;;388:231:12;;;;;;:::i;:::-;;:::i;1441:85:7:-;1513:6;;-1:-1:-1;;;;;1513:6:7;1441:85;;318:64:12;;;;;;:::i;:::-;977:244;;998:88:3;1074:5;;-1:-1:-1;;;;;1074:5:3;998:88;;528:21:0;;;;;-1:-1:-1;;;;;528:21:0;;;696:296:3;;;;;;:::i;:::-;;:::i;2321:198:7:-;;;;;;:::i;:::-;;:::i;934:176:0:-;1334:13:7;:11;:13::i;:::-;1022:6:0::1;::::0;;-1:-1:-1;;;;;1038:16:0;;::::1;-1:-1:-1::0;;;;;;1038:16:0;::::1;::::0;::::1;::::0;;;1069:34:::1;::::0;1022:6;::::1;::::0;1038:16;1022:6;;1069:34:::1;::::0;997:22:::1;::::0;1069:34:::1;987:123;934:176:::0;:::o;977:244:12:-;1049:15;1036:10;;:28;:57;;;;-1:-1:-1;1082:11:12;;-1:-1:-1;;;;;1082:11:12;1068:10;:25;1036:57;1032:183;;;1114:6;;1109:42;;-1:-1:-1;;;;;1114:6:12;;1125:4;1114:6;1109:4;:42::i;:::-;;977:244;:::o;1032:183::-;1189:15;;-1:-1:-1;;;1189:15:12;;;;;;;;;;;625:174;706:6;;-1:-1:-1;;;;;706:6:12;692:10;:20;688:68;;735:10;;-1:-1:-1;;;735:10:12;;;;;;;;;;;688:68;766:11;:26;;-1:-1:-1;;;;;;766:26:12;-1:-1:-1;;;;;766:26:12;;;;;;;;;;625:174::o;805:166::-;876:6;;-1:-1:-1;;;;;876:6:12;862:10;:20;858:68;;905:10;;-1:-1:-1;;;905:10:12;;;;;;;;;;;858:68;962:2;949:10;;:15;;;;:::i;:::-;936:10;:28;-1:-1:-1;805:166:12:o;2071:101:7:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;1233:176:0:-;1334:13:7;:11;:13::i;:::-;1321:6:0::1;::::0;;-1:-1:-1;;;;;1337:16:0;;::::1;-1:-1:-1::0;;;;;;1337:16:0;::::1;::::0;::::1;::::0;;;1368:34:::1;::::0;1321:6;::::1;::::0;1337:16;1321:6;;1368:34:::1;::::0;1296:22:::1;::::0;1368:34:::1;1286:123;1233:176:::0;:::o;388:231:12:-;504:15;514:4;504:9;:15::i;:::-;529;539:4;529:9;:15::i;:::-;554:11;:24;;-1:-1:-1;;;;;;554:24:12;-1:-1:-1;;;;;554:24:12;;;;;;;;;;;588:10;:24;-1:-1:-1;388:231:12:o;696:296:3:-;1334:13:7;:11;:13::i;:::-;-1:-1:-1;;;;;763:20:3;::::1;::::0;759:169:::1;;804:61;::::0;-1:-1:-1;;;804:61:3;;-1:-1:-1;;;804:61:3::1;::::0;::::1;2720:52:13::0;-1:-1:-1;;;;;804:35:3;::::1;::::0;::::1;::::0;2693:18:13;;804:61:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;799:118;;890:27;::::0;-1:-1:-1;;;890:27:3;;-1:-1:-1;;;;;1605:32:13;;890:27:3::1;::::0;::::1;1587:51:13::0;1560:18;;890:27:3::1;;;;;;;;799:118;937:5;:14:::0;;-1:-1:-1;;;;;;937:14:3::1;-1:-1:-1::0;;;;;937:14:3;::::1;::::0;;::::1;::::0;;;966:19:::1;::::0;1587:51:13;;;966:19:3::1;::::0;1575:2:13;1560:18;966:19:3::1;;;;;;;696:296:::0;:::o;2321:198:7:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:7;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:7;;3267:2:13;2401:73:7::1;::::0;::::1;3249:21:13::0;3306:2;3286:18;;;3279:30;3345:34;3325:18;;;3318:62;-1:-1:-1;;;3396:18:13;;;3389:36;3442:19;;2401:73:7::1;3065:402:13::0;2401:73:7::1;2484:28;2503:8;2484:18;:28::i;1599:130::-:0;1513:6;;-1:-1:-1;;;;;1513:6:7;929:10:10;1662:23:7;1654:68;;;;-1:-1:-1;;;1654:68:7;;3674:2:13;1654:68:7;;;3656:21:13;;;3693:18;;;3686:30;3752:34;3732:18;;;3725:62;3804:18;;1654:68:7;3472:356:13;1799:1215:0;1988:5;;1941:12;;-1:-1:-1;;;;;1988:5:0;2007:26;;2003:981;;2483:11;;;;;;;;;;;-1:-1:-1;;;2483:11:0;;;;2049:487;;-1:-1:-1;;;2049:487:0;;-1:-1:-1;;;;;2049:37:0;;;;;:487;;2170:2;;2190:5;;2213:4;;2235:9;;2370:1;;;;;;;;;;2512:10;;2049:487;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2568:6:0;;2560:147;;-1:-1:-1;;;2560:147:0;;-1:-1:-1;;;;;2568:6:0;;;;-1:-1:-1;2560:41:0;;-1:-1:-1;2560:147:0;;2619:2;;2639:5;;2662:4;;2684:9;;2560:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2721:64;;-1:-1:-1;;;2721:64:0;;-1:-1:-1;;;2721:64:0;;;6359:25:13;6427:14;;6420:22;6400:18;;;6393:50;2550:157:0;;-1:-1:-1;;;;;;2721:40:0;;;;;6332:18:13;;2721:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2003:981;;;2834:6;;2826:147;;-1:-1:-1;;;2826:147:0;;-1:-1:-1;;;;;2834:6:0;;;;2826:41;;:147;;2885:2;;2905:5;;2928:4;;2950:9;;2826:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2816:157;;2003:981;2993:14;1799:1215;;;;;;:::o;2673:187:7:-;2765:6;;;-1:-1:-1;;;;;2781:17:7;;;-1:-1:-1;;;;;;2781:17:7;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;14:173:13:-;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:13:o;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:921;583:6;636:2;624:9;615:7;611:23;607:32;604:52;;;652:1;649;642:12;604:52;692:9;679:23;721:18;762:2;754:6;751:14;748:34;;;778:1;775;768:12;748:34;816:6;805:9;801:22;791:32;;861:7;854:4;850:2;846:13;842:27;832:55;;883:1;880;873:12;832:55;919:2;906:16;941:2;937;934:10;931:36;;;947:18;;:::i;:::-;1022:2;1016:9;990:2;1076:13;;-1:-1:-1;;1072:22:13;;;1096:2;1068:31;1064:40;1052:53;;;1120:18;;;1140:22;;;1117:46;1114:72;;;1166:18;;:::i;:::-;1206:10;1202:2;1195:22;1241:2;1233:6;1226:18;1281:7;1276:2;1271;1267;1263:11;1259:20;1256:33;1253:53;;;1302:1;1299;1292:12;1253:53;1358:2;1353;1349;1345:11;1340:2;1332:6;1328:15;1315:46;1403:1;1381:15;;;1398:2;1377:24;1370:35;;;;-1:-1:-1;1385:6:13;515:921;-1:-1:-1;;;;;515:921:13:o;1831:180::-;1890:6;1943:2;1931:9;1922:7;1918:23;1914:32;1911:52;;;1959:1;1956;1949:12;1911:52;-1:-1:-1;1982:23:13;;1831:180;-1:-1:-1;1831:180:13:o;2016:328::-;2093:6;2101;2109;2162:2;2150:9;2141:7;2137:23;2133:32;2130:52;;;2178:1;2175;2168:12;2130:52;2201:29;2220:9;2201:29;:::i;:::-;2191:39;;2249:38;2283:2;2272:9;2268:18;2249:38;:::i;:::-;2239:48;;2334:2;2323:9;2319:18;2306:32;2296:42;;2016:328;;;;;:::o;2349:222::-;2414:9;;;2435:10;;;2432:133;;;2487:10;2482:3;2478:20;2475:1;2468:31;2522:4;2519:1;2512:15;2550:4;2547:1;2540:15;2432:133;2349:222;;;;:::o;2783:277::-;2850:6;2903:2;2891:9;2882:7;2878:23;2874:32;2871:52;;;2919:1;2916;2909:12;2871:52;2951:9;2945:16;3004:5;2997:13;2990:21;2983:5;2980:32;2970:60;;3026:1;3023;3016:12;3833:422;3874:3;3912:5;3906:12;3939:6;3934:3;3927:19;3964:1;3974:162;3988:6;3985:1;3982:13;3974:162;;;4050:4;4106:13;;;4102:22;;4096:29;4078:11;;;4074:20;;4067:59;4003:12;3974:162;;;3978:3;4181:1;4174:4;4165:6;4160:3;4156:16;4152:27;4145:38;4244:4;4237:2;4233:7;4228:2;4220:6;4216:15;4212:29;4207:3;4203:39;4199:50;4192:57;;;3833:422;;;;:::o;4260:237::-;4341:1;4334:5;4331:12;4321:143;;4386:10;4381:3;4377:20;4374:1;4367:31;4421:4;4418:1;4411:15;4449:4;4446:1;4439:15;4321:143;4473:18;;4260:237::o;4502:1191::-;-1:-1:-1;;;;;5059:15:13;;;5041:34;;5106:2;5091:18;;5084:34;;;4991:3;5149:2;5134:18;;5127:30;;;4962:4;;5180:44;5205:18;;;5197:6;5180:44;:::i;:::-;5166:58;;5233:53;5282:2;5271:9;5267:18;5259:6;5233:53;:::i;:::-;5323:6;5317:3;5306:9;5302:19;5295:35;5367:6;5361:3;5350:9;5346:19;5339:35;5411:6;5405:3;5394:9;5390:19;5383:35;5467:2;5459:6;5455:15;5449:3;5438:9;5434:19;5427:44;5520:2;5512:6;5508:15;5502:3;5491:9;5487:19;5480:44;5573:9;5565:6;5561:22;5555:3;5544:9;5540:19;5533:51;5601:32;5626:6;5618;5601:32;:::i;:::-;5593:40;;5683:2;5674:7;5670:16;5664:3;5653:9;5649:19;5642:45;;;4502:1191;;;;;;;;;;;;;;:::o;5698:488::-;5969:1;5965;5960:3;5956:11;5952:19;5944:6;5940:32;5929:9;5922:51;6009:6;6004:2;5993:9;5989:18;5982:34;6052:3;6047:2;6036:9;6032:18;6025:31;5903:4;6073:45;6113:3;6102:9;6098:19;6090:6;6073:45;:::i;:::-;6065:53;;6127;6176:2;6165:9;6161:18;6153:6;6127:53;:::i;:::-;5698:488;;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "avatar()": "5aef7de6",
    "beneficiary()": "38af3eed",
    "claimSafe(bytes)": "1a891577",
    "expiration()": "4665096d",
    "extendValidity(uint256)": "525a142f",
    "getGuard()": "c9106389",
    "guard()": "7ceab3b1",
    "init(address,address,uint256)": "86863ec6",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setAvatar(address)": "086cfca8",
    "setBeneficiary(address)": "1c31f710",
    "setGuard(address)": "e19a9dd9",
    "setTarget(address)": "776d1a01",
    "setUp(bytes)": "a4f9edbf",
    "target()": "d4b83992",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guard_\",\"type\":\"address\"}],\"name\":\"NotIERC165Compliant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlySafe\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousAvatar\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAvatar\",\"type\":\"address\"}],\"name\":\"AvatarSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"guard\",\"type\":\"address\"}],\"name\":\"ChangedGuard\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousTarget\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"TargetSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"avatar\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"claimSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expiration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"by\",\"type\":\"uint256\"}],\"name\":\"extendValidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGuard\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_guard\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guard\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_benefiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiration\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_avatar\",\"type\":\"address\"}],\"name\":\"setAvatar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"setBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_guard\",\"type\":\"address\"}],\"name\":\"setGuard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initializeParams\",\"type\":\"bytes\"}],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAvatar(address)\":{\"details\":\"Sets the avatar to a new avatar (`newAvatar`).\"},\"setGuard(address)\":{\"details\":\"Set a guard that checks transactions before execution.\",\"params\":{\"_guard\":\"The address of the guard to be used or the 0 address to disable the guard.\"}},\"setTarget(address)\":{\"details\":\"Sets the target to a new target (`newTarget`).\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"NotIERC165Compliant(address)\":[{\"notice\":\"`guard_` does not implement IERC165.\"}]},\"kind\":\"user\",\"methods\":{\"setAvatar(address)\":{\"notice\":\"Can only be called by the current owner.\"},\"setTarget(address)\":{\"notice\":\"Can only be called by the current owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CustomModule.sol\":\"CustomModule\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":zodiac/=lib/zodiac/contracts/\"]},\"sources\":{\"lib/zodiac/contracts/core/Module.sol\":{\"keccak256\":\"0x6f82ae64fc58bf16da3fa69f0e923151d82f3e8029212cc23105159cdfbf7dae\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bd5d436588179b890e735d8229d6ee643db8a914753d623238f8c0a5985394b9\",\"dweb:/ipfs/QmV7sPjDFVFQtUudbXZTyK9EVTm8Qt1amu5gYkERCkN1kY\"]},\"lib/zodiac/contracts/factory/FactoryFriendly.sol\":{\"keccak256\":\"0x96e61585b7340a901a54eb4c157ce28b630bff3d9d4597dfaac692128ea458c4\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://26252f06a8f31d7fe771b50fde9a6338133750bf05f7fc421dfa70c1df25ed7b\",\"dweb:/ipfs/QmQrZ4Zgvi3andou57Be9qpMmZatMx88rMxp3DPwUaFPsR\"]},\"lib/zodiac/contracts/guard/BaseGuard.sol\":{\"keccak256\":\"0xa825848d06a1fc3cb7ad86727c669c8fc6b3bd8dbe419a617830ddcd5e245e47\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://58bd190f4bb876471908d6145c6bebb9a22b5c9183192ffe199f4d94753f36bb\",\"dweb:/ipfs/QmYioir1PsjbCWAdCrFGJQiGHZM65umtb8qUSa63cb5Djq\"]},\"lib/zodiac/contracts/guard/Guardable.sol\":{\"keccak256\":\"0xebdcfbe7f0822d8afcc21a1ca8d809417b438cc8b27c3547190a1627a9f5110f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://b1c6c35a0ed50d561d819c60423b7a5e6c7cbeaf61c5e0b83dab210def1dd4ec\",\"dweb:/ipfs/QmSz8F6MtuYZMvMJDmfpt8VxHFeVexqS7mpWJE6kuJ8ZAF\"]},\"lib/zodiac/contracts/interfaces/IAvatar.sol\":{\"keccak256\":\"0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf\",\"dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2\"]},\"lib/zodiac/contracts/interfaces/IGuard.sol\":{\"keccak256\":\"0xd0d855accbc5fba81c67ab22cdbb03325a8a4d7f6b7e981d1ff0fec3178e464d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4b51c586b33cc97caebe85472855bbb4c56a4e387b14cde2c8110b12ace7ba6b\",\"dweb:/ipfs/QmYtVdNKa5D2A4cEdTg9cYwrDio7TdNKtbAHc86x33W5wt\"]},\"node_modules/@gnosis.pm/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/CustomModule.sol\":{\"keccak256\":\"0x271828ece3060bbed45252f47531990cba572fcbb14a37a13d1e6173d92d6f30\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a84ce0d6aaf86259cefb4c743fae1e46e2abdf45a54534f11d194f6436ef5a52\",\"dweb:/ipfs/QmWC6G2ry9AqKdqc1XoCYM1SG34NAb6Tmachzr1YD5fpy8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "guard_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NotIERC165Compliant"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlySafe"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAvatar",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newAvatar",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AvatarSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "guard",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChangedGuard",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousTarget",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newTarget",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TargetSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "avatar",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "beneficiary",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimSafe"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "expiration",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "by",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "extendValidity"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGuard",
          "outputs": [
            {
              "internalType": "address",
              "name": "_guard",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "guard",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_benefiary",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_expiration",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_avatar",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAvatar"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_beneficiary",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBeneficiary"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_guard",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGuard"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTarget"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initializeParams",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "target",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setAvatar(address)": {
            "details": "Sets the avatar to a new avatar (`newAvatar`)."
          },
          "setGuard(address)": {
            "details": "Set a guard that checks transactions before execution.",
            "params": {
              "_guard": "The address of the guard to be used or the 0 address to disable the guard."
            }
          },
          "setTarget(address)": {
            "details": "Sets the target to a new target (`newTarget`)."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "setAvatar(address)": {
            "notice": "Can only be called by the current owner."
          },
          "setTarget(address)": {
            "notice": "Can only be called by the current owner."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/=node_modules/@gnosis.pm/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/CustomModule.sol": "CustomModule"
      },
      "libraries": {}
    },
    "sources": {
      "lib/zodiac/contracts/core/Module.sol": {
        "keccak256": "0x6f82ae64fc58bf16da3fa69f0e923151d82f3e8029212cc23105159cdfbf7dae",
        "urls": [
          "bzz-raw://bd5d436588179b890e735d8229d6ee643db8a914753d623238f8c0a5985394b9",
          "dweb:/ipfs/QmV7sPjDFVFQtUudbXZTyK9EVTm8Qt1amu5gYkERCkN1kY"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/factory/FactoryFriendly.sol": {
        "keccak256": "0x96e61585b7340a901a54eb4c157ce28b630bff3d9d4597dfaac692128ea458c4",
        "urls": [
          "bzz-raw://26252f06a8f31d7fe771b50fde9a6338133750bf05f7fc421dfa70c1df25ed7b",
          "dweb:/ipfs/QmQrZ4Zgvi3andou57Be9qpMmZatMx88rMxp3DPwUaFPsR"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/guard/BaseGuard.sol": {
        "keccak256": "0xa825848d06a1fc3cb7ad86727c669c8fc6b3bd8dbe419a617830ddcd5e245e47",
        "urls": [
          "bzz-raw://58bd190f4bb876471908d6145c6bebb9a22b5c9183192ffe199f4d94753f36bb",
          "dweb:/ipfs/QmYioir1PsjbCWAdCrFGJQiGHZM65umtb8qUSa63cb5Djq"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/guard/Guardable.sol": {
        "keccak256": "0xebdcfbe7f0822d8afcc21a1ca8d809417b438cc8b27c3547190a1627a9f5110f",
        "urls": [
          "bzz-raw://b1c6c35a0ed50d561d819c60423b7a5e6c7cbeaf61c5e0b83dab210def1dd4ec",
          "dweb:/ipfs/QmSz8F6MtuYZMvMJDmfpt8VxHFeVexqS7mpWJE6kuJ8ZAF"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/interfaces/IAvatar.sol": {
        "keccak256": "0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f",
        "urls": [
          "bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf",
          "dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/interfaces/IGuard.sol": {
        "keccak256": "0xd0d855accbc5fba81c67ab22cdbb03325a8a4d7f6b7e981d1ff0fec3178e464d",
        "urls": [
          "bzz-raw://4b51c586b33cc97caebe85472855bbb4c56a4e387b14cde2c8110b12ace7ba6b",
          "dweb:/ipfs/QmYtVdNKa5D2A4cEdTg9cYwrDio7TdNKtbAHc86x33W5wt"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@gnosis.pm/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/CustomModule.sol": {
        "keccak256": "0x271828ece3060bbed45252f47531990cba572fcbb14a37a13d1e6173d92d6f30",
        "urls": [
          "bzz-raw://a84ce0d6aaf86259cefb4c743fae1e46e2abdf45a54534f11d194f6436ef5a52",
          "dweb:/ipfs/QmWC6G2ry9AqKdqc1XoCYM1SG34NAb6Tmachzr1YD5fpy8"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/CustomModule.sol",
    "id": 1308,
    "exportedSymbols": {
      "AddressUpgradeable": [
        1127
      ],
      "BaseGuard": [
        343
      ],
      "ContextUpgradeable": [
        1169
      ],
      "CustomModule": [
        1307
      ],
      "Enum": [
        542
      ],
      "FactoryFriendly": [
        278
      ],
      "Guardable": [
        411
      ],
      "IAvatar": [
        498
      ],
      "IERC165": [
        1181
      ],
      "IGuard": [
        535
      ],
      "Initializable": [
        843
      ],
      "Module": [
        267
      ],
      "OwnableUpgradeable": [
        674
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1185:12",
    "nodes": [
      {
        "id": 1183,
        "nodeType": "PragmaDirective",
        "src": "39:24:12",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 1184,
        "nodeType": "ImportDirective",
        "src": "65:32:12",
        "nodes": [],
        "absolutePath": "lib/zodiac/contracts/core/Module.sol",
        "file": "zodiac/core/Module.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1308,
        "sourceUnit": 268,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1307,
        "nodeType": "ContractDefinition",
        "src": "99:1124:12",
        "nodes": [
          {
            "id": 1188,
            "nodeType": "VariableDeclaration",
            "src": "137:25:12",
            "nodes": [],
            "constant": false,
            "functionSelector": "4665096d",
            "mutability": "mutable",
            "name": "expiration",
            "nameLocation": "152:10:12",
            "scope": 1307,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1187,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "137:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1190,
            "nodeType": "VariableDeclaration",
            "src": "168:26:12",
            "nodes": [],
            "constant": false,
            "functionSelector": "38af3eed",
            "mutability": "mutable",
            "name": "beneficiary",
            "nameLocation": "183:11:12",
            "scope": 1307,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1189,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "168:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1192,
            "nodeType": "ErrorDefinition",
            "src": "201:17:12",
            "nodes": [],
            "errorSelector": "d7fed6bd",
            "name": "OnlySafe",
            "nameLocation": "207:8:12",
            "parameters": {
              "id": 1191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "215:2:12"
            }
          },
          {
            "id": 1194,
            "nodeType": "ErrorDefinition",
            "src": "223:22:12",
            "nodes": [],
            "errorSelector": "ea8e4eb5",
            "name": "NotAuthorized",
            "nameLocation": "229:13:12",
            "parameters": {
              "id": 1193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "242:2:12"
            }
          },
          {
            "id": 1203,
            "nodeType": "FunctionDefinition",
            "src": "251:61:12",
            "nodes": [],
            "body": {
              "id": 1202,
              "nodeType": "Block",
              "src": "265:47:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1198,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "294:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "298:6:12",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "294:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1197,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 668,
                      "src": "275:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "275:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1201,
                  "nodeType": "ExpressionStatement",
                  "src": "275:30:12"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:2:12"
            },
            "returnParameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "265:0:12"
            },
            "scope": 1307,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1210,
            "nodeType": "FunctionDefinition",
            "src": "318:64:12",
            "nodes": [],
            "body": {
              "id": 1209,
              "nodeType": "Block",
              "src": "380:2:12",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              277
            ],
            "functionSelector": "a4f9edbf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "327:5:12",
            "overrides": {
              "id": 1207,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "371:8:12"
            },
            "parameters": {
              "id": 1206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1205,
                  "mutability": "mutable",
                  "name": "initializeParams",
                  "nameLocation": "346:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1210,
                  "src": "333:29:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1204,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "333:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "332:31:12"
            },
            "returnParameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "380:0:12"
            },
            "scope": 1307,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1236,
            "nodeType": "FunctionDefinition",
            "src": "388:231:12",
            "nodes": [],
            "body": {
              "id": 1235,
              "nodeType": "Block",
              "src": "494:125:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1220,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1212,
                        "src": "514:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1219,
                      "name": "setAvatar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "504:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "504:15:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1222,
                  "nodeType": "ExpressionStatement",
                  "src": "504:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1224,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1212,
                        "src": "539:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1223,
                      "name": "setTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "529:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "529:15:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1226,
                  "nodeType": "ExpressionStatement",
                  "src": "529:15:12"
                },
                {
                  "expression": {
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1227,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "554:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1228,
                      "name": "_benefiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1214,
                      "src": "568:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "554:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1230,
                  "nodeType": "ExpressionStatement",
                  "src": "554:24:12"
                },
                {
                  "expression": {
                    "id": 1233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1231,
                      "name": "expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1188,
                      "src": "588:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1232,
                      "name": "_expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1216,
                      "src": "601:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "588:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1234,
                  "nodeType": "ExpressionStatement",
                  "src": "588:24:12"
                }
              ]
            },
            "functionSelector": "86863ec6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nameLocation": "397:4:12",
            "parameters": {
              "id": 1217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1212,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "419:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1236,
                  "src": "411:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1214,
                  "mutability": "mutable",
                  "name": "_benefiary",
                  "nameLocation": "441:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1236,
                  "src": "433:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1216,
                  "mutability": "mutable",
                  "name": "_expiration",
                  "nameLocation": "469:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1236,
                  "src": "461:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "401:85:12"
            },
            "returnParameters": {
              "id": 1218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:0:12"
            },
            "scope": 1307,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1255,
            "nodeType": "FunctionDefinition",
            "src": "625:174:12",
            "nodes": [],
            "body": {
              "id": 1254,
              "nodeType": "Block",
              "src": "678:121:12",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1241,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "692:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "696:6:12",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "692:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1243,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "706:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "692:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1249,
                  "nodeType": "IfStatement",
                  "src": "688:68:12",
                  "trueBody": {
                    "id": 1248,
                    "nodeType": "Block",
                    "src": "714:42:12",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1245,
                            "name": "OnlySafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "735:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "735:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1247,
                        "nodeType": "RevertStatement",
                        "src": "728:17:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1250,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "766:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1251,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1238,
                      "src": "780:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "766:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1253,
                  "nodeType": "ExpressionStatement",
                  "src": "766:26:12"
                }
              ]
            },
            "functionSelector": "1c31f710",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBeneficiary",
            "nameLocation": "634:14:12",
            "parameters": {
              "id": 1239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nameLocation": "657:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1255,
                  "src": "649:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "648:22:12"
            },
            "returnParameters": {
              "id": 1240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "678:0:12"
            },
            "scope": 1307,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1276,
            "nodeType": "FunctionDefinition",
            "src": "805:166:12",
            "nodes": [],
            "body": {
              "id": 1275,
              "nodeType": "Block",
              "src": "848:123:12",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1260,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "862:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "866:6:12",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "862:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1262,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "876:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "862:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1268,
                  "nodeType": "IfStatement",
                  "src": "858:68:12",
                  "trueBody": {
                    "id": 1267,
                    "nodeType": "Block",
                    "src": "884:42:12",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1264,
                            "name": "OnlySafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "905:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "905:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1266,
                        "nodeType": "RevertStatement",
                        "src": "898:17:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1269,
                      "name": "expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1188,
                      "src": "936:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1270,
                        "name": "expiration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1188,
                        "src": "949:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1271,
                        "name": "by",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1257,
                        "src": "962:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "949:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "936:28:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1274,
                  "nodeType": "ExpressionStatement",
                  "src": "936:28:12"
                }
              ]
            },
            "functionSelector": "525a142f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "extendValidity",
            "nameLocation": "814:14:12",
            "parameters": {
              "id": 1258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1257,
                  "mutability": "mutable",
                  "name": "by",
                  "nameLocation": "837:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "829:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "828:12:12"
            },
            "returnParameters": {
              "id": 1259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "848:0:12"
            },
            "scope": 1307,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1306,
            "nodeType": "FunctionDefinition",
            "src": "977:244:12",
            "nodes": [],
            "body": {
              "id": 1305,
              "nodeType": "Block",
              "src": "1022:199:12",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1281,
                        "name": "expiration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1188,
                        "src": "1036:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "id": 1282,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1049:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1055:9:12",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1049:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1036:28:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1285,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1068:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1072:6:12",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1068:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1287,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1190,
                        "src": "1082:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1068:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1036:57:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1303,
                    "nodeType": "Block",
                    "src": "1168:47:12",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1300,
                            "name": "NotAuthorized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1194,
                            "src": "1189:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1189:15:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1302,
                        "nodeType": "RevertStatement",
                        "src": "1182:22:12"
                      }
                    ]
                  },
                  "id": 1304,
                  "nodeType": "IfStatement",
                  "src": "1032:183:12",
                  "trueBody": {
                    "id": 1299,
                    "nodeType": "Block",
                    "src": "1095:67:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1291,
                              "name": "avatar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "1114:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1122:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 1293,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1278,
                              "src": "1125:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1294,
                                  "name": "Enum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 542,
                                  "src": "1131:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Enum_$542_$",
                                    "typeString": "type(contract Enum)"
                                  }
                                },
                                "id": 1295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1136:9:12",
                                "memberName": "Operation",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 541,
                                "src": "1131:14:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Operation_$541_$",
                                  "typeString": "type(enum Enum.Operation)"
                                }
                              },
                              "id": 1296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1146:4:12",
                              "memberName": "Call",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 539,
                              "src": "1131:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Operation_$541",
                                "typeString": "enum Enum.Operation"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_Operation_$541",
                                "typeString": "enum Enum.Operation"
                              }
                            ],
                            "id": 1290,
                            "name": "exec",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "1109:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$541_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) returns (bool)"
                            }
                          },
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1109:42:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1298,
                        "nodeType": "ExpressionStatement",
                        "src": "1109:42:12"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "1a891577",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimSafe",
            "nameLocation": "986:9:12",
            "parameters": {
              "id": 1279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1278,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1009:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1306,
                  "src": "996:17:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1277,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "995:19:12"
            },
            "returnParameters": {
              "id": 1280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1022:0:12"
            },
            "scope": 1307,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1185,
              "name": "Module",
              "nameLocations": [
                "124:6:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 267,
              "src": "124:6:12"
            },
            "id": 1186,
            "nodeType": "InheritanceSpecifier",
            "src": "124:6:12"
          }
        ],
        "canonicalName": "CustomModule",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1307,
          267,
          411,
          278,
          674,
          1169,
          843
        ],
        "name": "CustomModule",
        "nameLocation": "108:12:12",
        "scope": 1308,
        "usedErrors": [
          362,
          1192,
          1194
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 12
}